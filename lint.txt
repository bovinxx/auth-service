/home/bovinxx/projects/auth-service/bin/golangci-lint run ./... --config ./.golangci.yml
internal/api/user/tests/create_test.go:18:6: Function 'TestCreate' is too long (96 > 60) (funlen)
func TestCreate(t *testing.T) {
     ^
internal/api/user/tests/delete_test.go:17:6: Function 'TestDelete' is too long (74 > 60) (funlen)
func TestDelete(t *testing.T) {
     ^
internal/api/user/tests/get_test.go:18:6: Function 'TestGet' is too long (100 > 60) (funlen)
func TestGet(t *testing.T) {
     ^
internal/api/user/tests/update_test.go:17:6: Function 'TestUpdate' is too long (79 > 60) (funlen)
func TestUpdate(t *testing.T) {
     ^
internal/api/user/tests/create_test.go:98:10: SA1019: mc.Finish is deprecated: Finish exists for historical compatibility and should not be used. Current implementation of controller registers Finish as Cleanup function for the testing.T instance passed to NewController. (staticcheck)
			defer mc.Finish()
			      ^
internal/api/user/tests/delete_test.go:82:10: SA1019: mc.Finish is deprecated: Finish exists for historical compatibility and should not be used. Current implementation of controller registers Finish as Cleanup function for the testing.T instance passed to NewController. (staticcheck)
			defer mc.Finish()
			      ^
internal/api/user/tests/get_test.go:100:10: SA1019: mc.Finish is deprecated: Finish exists for historical compatibility and should not be used. Current implementation of controller registers Finish as Cleanup function for the testing.T instance passed to NewController. (staticcheck)
			defer mc.Finish()
			      ^
internal/config/http.go:22:23: unexported-return: exported func NewHTTPConfig returns unexported type *config.httpConfig, which can be annoying to use (revive)
func NewHTTPConfig() (*httpConfig, error) {
                      ^
internal/config/prometheus.go:22:29: unexported-return: exported func NewPrometheusConfig returns unexported type *config.prometheusConfig, which can be annoying to use (revive)
func NewPrometheusConfig() (*prometheusConfig, error) {
                            ^
internal/config/redis.go:36:24: unexported-return: exported func NewRedisConfig returns unexported type *config.redis, which can be annoying to use (revive)
func NewRedisConfig() (*redis, error) {
                       ^
internal/client/cache/redis/redis.go:21:61: unexported-return: exported func NewClient returns unexported type *redis.client, which can be annoying to use (revive)
func NewClient(pool *redis.Pool, config config.RedisConfig) *client {
                                                            ^
internal/client/cache/redis/redis.go:28:22: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)
func (c *client) Set(ctx context.Context, key string, value any, ttl time.Duration) error {
                     ^
internal/client/cache/redis/redis.go:36:22: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)
func (c *client) Get(ctx context.Context, key string) (string, error) {
                     ^
internal/client/cache/redis/redis.go:48:22: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)
func (c *client) Del(ctx context.Context, key string) error {
                     ^
internal/interceptor/rate_limiter.go:24:2: unused-parameter: parameter 'info' seems to be unused, consider removing or renaming it as _ (revive)
	info *grpc.UnaryServerInfo,
	^
internal/interceptor/rate_limiter.go:29:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)
	} else {
		return nil, status.Error(codes.ResourceExhausted, "too many requests")
	}
internal/client/db/pg/pg.go:101:2: S1023: redundant `return` statement (gosimple)
	return
	^
internal/repository/user/user/repository.go:122:58: unused-parameter: parameter 'oldPassword' seems to be unused, consider removing or renaming it as _ (revive)
func (r *repo) UpdateUser(ctx context.Context, id int64, oldPassword, newPassword string) error {
                                                         ^
internal/client/db/prettier/prettier.go:8:13: unused-parameter: parameter 'query' seems to be unused, consider removing or renaming it as _ (revive)
func Pretty(query, placeholder string, args ...any) string {
            ^
internal/services/auth/auth/check_refresh_token.go:30:20: Error return value of `s.cache.SetStruct` is not checked (errcheck)
		s.cache.SetStruct(ctx, cacheKey, session, cacheExpTime)
		                 ^
