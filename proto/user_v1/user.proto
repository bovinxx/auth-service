syntax = "proto3";

package user;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/bovinxx/auth-service/api/user_v1;user_v1";

service UserService {
    rpc Create(CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/auth-service/v1/create"
            body: "*"
        };
    }
    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/auth-service/v1/get"
        };
    }
    rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/auth-service/v1/update"
            body: "*"
        };
    }
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/auth-service/v1/delete"
        };
    }
};

enum Role {
    ROLE_ADMIN = 0;
    ROLE_USER = 1;
}

message CreateRequest {
    string name = 1 [(validate.rules).string = {min_len:1, max_len:32, pattern:"^[a-zA-Z0-9_]+$"}];
    string email = 2 [(validate.rules).string = {email:true}]; 
    string password = 3 [(validate.rules).string = {min_len:5, max_len:64}];
    Role role = 4 [(validate.rules).enum.defined_only = true];
};

message CreateResponse {
    int64 id = 1;
};

message GetRequest {
    int64 id = 1 [(validate.rules).int64 = {gte:0}];
};

message GetResponse {
    int64 id = 1;
    string name = 2;
    string email = 3;
    Role role = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
};

message UpdateRequest {
    int64 id = 1 [(validate.rules).int64 = {gte:0}];
    string old_password = 3 [(validate.rules).string = {min_len:5, max_len:64}];
    string new_password = 4 [(validate.rules).string = {min_len:5, max_len:64}];
};

message DeleteRequest {
    int64 id = 1 [(validate.rules).int64 = {gte:0}];
};